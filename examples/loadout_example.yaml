---
# example loadout for file management for keeper

# FILE AND DIRECTORY OPERATIONS

# Keeper can now sync directories as well as files

# All directories are tarred and gz2 compressed, then untarred on the remote end. All files under 1Mb
# are trasferred uncompressed, over 1Mb file is tarred / compressed and sent. 

# sync strategy can be one of the following (default is STRICT) it only applies to directories
# Files are STRICT by default (any other options ignored)

# STRICT = managed directory must be exactly the same as local directory each check-in, if it differs,
# directory is analyzed, deltas required to bring back into sync are calculated, and executed.
# ALLOW_ADDS = same as above, but allows extra files and directories to be added on the remote (within managed dir)
# ENSURE_CREATED = as long as the directory is created, the contents don't matter. This is
# handy for if you want to sync a directory and then want to add / delete / modify files after
# note - if the directory is created manually prior on the remote end, it won't be synced

# FILE LOCATIONS

# The vault dir is displayed when you start the keeper. By default this is:
# ~/.vault

# However, the vault dir is configurable with the vault_dir directive

# The folder hierarchy is as follows:

# {vault_dir}
#   {appname}
#     common
#     {component 1}
#     {component 2} 

# files must reside in the above directories if they are to be transfered to agents

# ANCHORS AND MERGE OPERATOR

# this is handy if you have files that you want to share across several, but not all components.
# You can use an anchor to define the object once, then use the Merge Key operator to merge into the component

# If a file isn't found on a component, it will try the global files. So in the above, where you are merging in
# files on components, you can just stick the one copy of the file in the common directory

# If you want your component to receive global files only, it must still have an entry in the components secion
# this can be as simple as adding a mapping like  `mycomponent: {}`
defaults: &defaults
  - name: crankyseagull
    remote_prefix: /tmp/jumbo
apps:
  gravyboat:
    agent_ips: [192.168.4.27]
    polling_interval: 60
    managed_objects:
      - name: chud.txt
        # this remote path is absolute, so the final path on the agent will be /tmp/chud.txt
        remote_prefix: /tmp/
      - name: chumgo.txt
      # notice this remote_prefix is relative, this will be relative to the agents working dir
      # absolute path will be /{working_dir}/chunk/chumgo.txt (by default, the working dir is /tmp)
        remote_prefix: chunk/
    components:
      # 127.0.0.1: # this would normally be a friendly component name, but on my test machine, just using ip
      #   # these are specific to a component
      #   working_dir: "/tmp"
      #   managed_objects:
      #     - name: blah.txt
      #       remote_prefix: /tmp/
      #     - name: quotes.txt
      #     - name: dogs
      #     - name: racing
      #       sync_strategy: ENSURE_CREATED
      fluxagent: # this is a component name
        remote_working_dir: "/tmp/rangi"
        managed_objects:
          - name: blah.txt
          # - <<: *defaults # Mapping merge operator, this adds the above defaults here
          # - name: racing
          #   remote_prefix: /tmp/sally/
          #   sync_strategy: ALLOW_ADDS
          # - name: 
        # managed_tasks: NOT IMPLEMENTED (YET)


# here is the equivalent using the command line. Note the command line params can only support one app.
# If you need to run multiple apps - use a loadout.

# Obviously, using the CLI is error prone, if you are adding more than the odd file, use a loadout

# CLI format for managed-objects  <local-path>:<remote-path-prefix>:<sync-strat>@<component>

# local path: REQUIRED. This is the local relative path on the keeper. It's relative to The level in the hierarchy.
# If specified app wide - then the file must go in the appname/common directory in the vault. If specified on a component,
# the file must reside in the appname/componentname directory in the vault

# remote path: OPTIONAL. This can be either absolute or relative. If relative, it's relative to the agent's working dir
# If not specified, the local_path will be used with the working dir of the agent
# sync strategy: OPTIONAL. Must be one of S, A, C. S = STRICT, A = ADDS_ALLOWED, C = ENSURE_CREATED. STRICT by default.

# fluxvault keeper --app-name gravyboat --agent-ips 192.168.4.27 \
# --managed-objects chud.txt:/tmp/,chumgo.txt:chunk/,blah.txt:/tmp/@127.0.0.1,quotes.txt@127.0.0.1,dogs@127.0.0.1,racing:C@127.0.0.1,crankyseagull:/tmp/jumbo@fluxagent,racing:/tmp/sally/:A@fluxagent \
#  --polling-interval 20


# fluxvault keeper --app-name gravyboat --agent-ips 192.168.4.27 \
# --managed-objects chud.txt:/tmp/,chumgo.txt:chunk/,blah.txt:/tmp/@127.0.0.1,quotes.txt@127.0.0.1,dogs@127.0.0.1,racing:C@127.0.0.1,crankyseagull:/tmp/jumbo@fluxagent,racing:/tmp/sally/:A@fluxagent,VSCode-darwin-universal.zip@fluxagent,ubu/ubuntu-22.04.1-live-server-amd64.iso@fluxagent \
 # --polling-interval 20